<?php

include_once 'includes/buy_link.inc';

/**
 * Implements hook_views_query_alter().
 * fix to read the date argument which was otherwise not parsed
 */
function gc_custom_views_query_alter(&$view, &$query) {

  // (Example assuming a view with an exposed filter on node title.)
  // If the input for the title filter is a positive integer, filter against
  // node ID instead of node title.
  if ($view->name == 'concerts' && $view->current_display == 'home_list') {
    $selected_date = $view->args[1];
    if($selected_date){
      $view->query->add_where_expression(
        1,
        "DATE_FORMAT(field_data_field_date.field_date_value, '%Y-%m-%d') = :field_data_field_date_field_date_value_2", 
        array(':field_data_field_date_field_date_value_2' => $selected_date)
      );
    }
  }
}


/*
 * provide link formatter to show buy/acheter links
 */
function gc_custom_field_formatter_info() {
  $info = [];
  $info['buy_link'] = _buy_link_formatter_info();
  return $info;
}

function gc_custom_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  switch($display['type']){
    case 'buy_link':
      return _buy_link_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display);
      break;
  }
}

function gc_custom_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}


function gc_custom_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'webform_client_form_') === 0) {
    $form['#attached']['js'] = array(drupal_get_path('module', 'gc_custom') . '/gc_custom.js');
  }
}

function gc_i18n_string_list_taxonomy_alter(&$strings, $type, $object) {

  if ($type == 'taxonomy_term' && $object) {
    // Retrieve vocabulary and potential field instances 
    // for this vocabulary.
    $vid = $object->vid;
    $vocabulary = taxonomy_vocabulary_load($vid);
    $field_instances = field_info_instances($type, $vocabulary->machine_name);

    // Iterate over each fields to check if textfield(s) exists.
    foreach ($field_instances as $field_name => $field_instance) {
      if ($field_instance['widget']['type'] == 'text_textfield'|| true) {

        // Retrieve data for the field.
        $term_data = field_get_items($type, $object, $field_name);

        // Add new entry into strings array to reflect
        // values from current processed field.
        $strings['taxonomy']['term'][$object->tid][$field_name] = array(
          'string' => $term_data[0]['value'],
          'title' => $field_instance['label'],
          'format' => NULL,
          'name' => array('taxonomy', 'term', $object->tid, $field_name),
        );
      }
    }
  }
}